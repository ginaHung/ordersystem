variables:
  DOCKER_DRIVER: overlay2

cache:
  paths:
    - BackEnd/public/
    - BackEnd/node_modules/
    - FrontEnd/node_modules/

stages:
  - buildfrontend
  - build
  - deploy

buildfrontend:
  only:
    - azure_login
  image: node:12
  stage: buildfrontend
  tags:
    - aws
    - m4-large
  script:
    - ls
    - cd ./FrontEnd
    - npm install
    - ls
    - npm run build
    - mkdir -p ../BackEnd/public/web
    - cp -rf ./dist/*.* ../BackEnd/public/web

dev_build:
  only:
    - azure_login
  image: docker
  stage: build
  services:
    - docker:dind
  tags:
    - aws
    - m4-large
  script:
    - export COMMIT=$(date +"%Y%m%d%H%M")
    - echo ${COMMIT}
    - cd BackEnd
    - ls -a
    # - docker version
    - echo ${REPO_URL}/${REPO_PROJECT}:${COMMIT}
    - echo "$REPO_PASSWORD" | docker login -u "$REPO_USER" --password-stdin ${REPO_URL}
    - docker build --no-cache -t ${REPO_URL}/${REPO_PROJECT}:${COMMIT} .
    - docker tag ${REPO_URL}/${REPO_PROJECT}:${COMMIT} ${REPO_URL}/${REPO_PROJECT}:latest
    - docker push ${REPO_URL}/${REPO_PROJECT}:${COMMIT}
    - docker push ${REPO_URL}/${REPO_PROJECT}:latest

dev_deploy:
  only:
    - azure_login
  image:
    name: chnbohwr/docker
    entrypoint: [""]
  stage: deploy
  tags:
    - aws
    - m4-large
  variables:
    KUBECONFIG: /opt/bitnami/config
  before_script:
    - mkdir -p /opt/bitnami/
    - cp $KUBECONFIG_PRD $KUBECONFIG
  script:
    - echo ${COMMIT}
    # - kubectl create secret docker-registry docker-pull-secret
    #   --docker-server=$REPO_URL
    #   --docker-username=$REPO_USER
    #   --docker-password=$REPO_PASSWORD
    #   -n ordersystem
    #   -o yaml
    #   --dry-run | kubectl apply -f -
    # - source $PRDENV
    # - export IMAGE_NAME=${REPO_URL}/${REPO_PROJECT}:latest
    # - cd helm-tms
    # - envsubst < values_template.yaml > values.yaml
    # - envsubst < values_template_schedule.yaml > scheduleValues.yaml
    # - cat values.yaml
    # - cat scheduleValues.yaml
    # #- helm install test--management . --namespace=tms
    # - helm install test--management--schedule -f scheduleValues.yaml . --namespace=tms
    # - helm upgrade test--management . --install --namespace=tms
    # #- helm upgrade test--management--schedule -f scheduleValues.yaml . --install --namespace=tms
    # - helm list --namespace=tms
    # - kubectl get svc -n tms
